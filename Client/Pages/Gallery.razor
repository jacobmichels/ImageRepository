@page "/gallery"

@using ImageRepository.Shared;
@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http

<div class="text-center">
    <h1>Gallery &#128083;</h1>
    <hr>
    <h3>Here is where you can view, edit, and delete the individual images on your account.</h3>
    <hr>
    <AuthorizeView>
        <Authorized>
            <h5>@StatusText</h5>
            <div class="spinner-border text-primary @SpinnerVisibility" role="status">
            </div>
            @if (Images.Any())
            {
                <ImageGrid Images="@Images" UpdateServer="true" ShowView="true" ShowEdit="true" ShowDelete="true"></ImageGrid>
            }
            else
            {
                <h5>Looks like you don't have any images uploaded to your account! Click the upload button on the left to start uploading images.</h5>
            }
        </Authorized>
        <NotAuthorized>
            <h3>Sorry! To view your images you must be logged in. Please log in or create an account to continue.</h3>
        </NotAuthorized>
    </AuthorizeView>
</div>


@code {
    private string StatusText = "Fetching images...";

    private IList<Image> Images = new List<Image>();

    private string SpinnerVisibility = "visible";

    protected override async Task OnInitializedAsync()
    {
        var AuthState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (!AuthState.User.Identity.IsAuthenticated)
        {
            return;
        }
        var ImagesEnumerable = await Http.GetFromJsonAsync<IEnumerable<Image>>("/image");
        foreach (Image image in ImagesEnumerable)
        {
            Images.Add(image);
        }
        SpinnerVisibility = "invisible";
        StatusText = "";
    }
}
